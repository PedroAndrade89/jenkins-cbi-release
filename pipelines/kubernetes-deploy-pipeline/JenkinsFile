pipeline {
   parameters {
    choice(name: 'action', choices: 'create\ndestroy', description: 'Create/update or destroy the eks cluster.')
    choice(name: 'environment_type', choices: 'qa\nstage\nprod', description: 'Create/update or destroy the eks cluster.')
    string(name: 'cluster', defaultValue : 'demo', description: "EKS cluster name.")
    choice(name: 'k8s_version', choices: '1.30\n1.29\n1.28', description: 'K8s version to install.')
    string(name: 'num_workers', defaultValue : '3', description: "k8s number of worker instances.")
    string(name: 'max_workers', defaultValue : '10', description: "k8s maximum number of worker instances that can be scaled.")
    booleanParam(name: 'cw_logs', defaultValue : true, description: "Setup Cloudwatch logging?")
    booleanParam(name: 'cw_metrics', defaultValue : false, description: "Setup Cloudwatch metrics and Container Insights?")
    booleanParam(name: 'metrics_server', defaultValue : true, description: "Setup k8s metrics-server?")
    booleanParam(name: 'dashboard', defaultValue : false, description: "Setup k8s dashboard?")
    booleanParam(name: 'prometheus', defaultValue : true, description: "Setup k8s prometheus?")
    booleanParam(name: 'nginx_ingress', defaultValue : true, description: "Setup nginx ingress and load balancer?")
    booleanParam(name: 'ca', defaultValue : false, description: "Setup k8s Cluster Autoscaler?")
    booleanParam(name: 'cert_manager', defaultValue : false, description: "Setup cert-manager for certificate handling?")
    string(name: 'region', defaultValue : 'eu-west-1', description: "AWS region.")
  }

    options {
      disableConcurrentBuilds()
      timeout(time: 40, unit: 'MINUTES') // Timeout
      ansiColor('xterm')
    }

    agent {
        label 'jenkins-slave'
    }

    environment {
        PATH = "/home/jenkins-slave/.local/bin/:${env.PATH}" // Add Ansible bin directory to PATH
        SECRET_NAME = "${env.cluster_name}-jenkins-sa-kubeconf" // Define the name of your secret in AWS Secrets Manager
        switch (${env.BRANCH_NAME}) {
          case 'qa':
            DIR='terraform/environments/qa'
            break;
          case 'prod':
            DIR='terraform/environments/prod'
            break;
          case 'stage':
            DIR='terraform/environments/stage'
            break;
    }

      stages {
          stage('Output Branch Name') {
              steps {
                  echo "Currently building branch: ${env.BRANCH_NAME}"
              }
          }
          // Add other stages as needed
      }
      post {
          always {
              // Cleanup
              cleanWs()
          }
      }
  }
}